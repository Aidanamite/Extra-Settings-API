{
  "name": "Settings Template",
  "author": "Aidanamite",
  "description": "Just a template/demonstration of how to use the Extra Settings API mod",
  "version": "1.2.5",
  "license": "GNU AGPLv3",
  "icon": "icon.png",
  "banner": "banner.jpg",
  "gameVersion": "1.0",
  "requiredByAllPlayers": false,
  "updateUrl": "https://www.raftmodding.com/api/v1/mods/settings-template/version.txt",
  "isModPermanent": false,
  "excludedFiles": [],
  "modSettings": [
    {
      "type": "checkbox", // required field
      "name": "checkBoxDisplay", // required field. This is used as an ID. Having duplicate IDs may cause issues
      "text": "Checkbox Display", // optional field. This is the text shown on the setting label. If not used, label will default to "name" field
      "access": "both", // optional field. This can be set to "both", "mainmenu", "world" or "globalworld". See bottom of JSON for full explanation
      "default": true // required field
    },
    {
      "type": "combobox", // required field
      "name": "comboBoxDisplay", // required field. This is used as an ID. Having duplicate IDs may cause issues
      "text": "Combobox Display", // optional field. This is the text shown on the setting label. If not used, label will default to "name" field
      "access": "world", // optional field. This can be set to "both", "mainmenu", "world" or "globalworld". See bottom of JSON for full explanation
      "default": "World", // required field. If value specified is not found in the "values" field then will be defaulted to the first item in the list
      "values": [ "Hello", "World", "I'm", "A", "Computer" ] // required field. This is the list of items that can be choosen in the combobox
    },
    {
      "type": "slider", // required field
      "name": "sliderDisplay", // required field. This is used as an ID. Having duplicate IDs may cause issues
      "text": "Slider Display", // optional field. This is the text shown on the setting label. If not used, label will default to "name" field
      "access": "mainmenu", // optional field. This can be set to "both", "mainmenu", "world" or "globalworld". See bottom of JSON for full explanation
      "default": 0.75, // required field. If value specified is outside the set range then will be defaulted to the nearest valid value
      "range": { // optional field
        "type": "percent", // optional field. Valid options are "percent" or "number". If not specified will default to "number"
        "min": 0.5, // optional field
        "max": 1.75, // optional field
        "decimals": 1 // optional field. This is the numbers of decimals to round a number to for the display and the GetSilderValue method
      }
    },
    {
      "type": "keybind", // required field
      "name": "keybindDisplay", // required field. This is used as an ID. Having duplicate IDs may cause issues
      "text": "Keybind Display", // optional field. This is the text shown on the setting label. If not used, label will default to "name" field
      "access": "globalworld", // optional field. This can be set to "both", "mainmenu", "world" or "globalworld". See bottom of JSON for full explanation
      "mainDefault": "M", // optional field. If not specified will default to "None"
      "altDefault": "n" // optional field. If not specified will default to "None"
      // Values for the keybinds must be specified as the name of its KeyCode enumarable. Refer to https://docs.unity3d.com/ScriptReference/KeyCode.html
    },
    {
      "type": "text", // required field
      "name": "textDisplay", // required field. This is used as an ID. Having duplicate IDs may cause issues
      "text": "Text Display" // optional field. This is the text shown on the setting label. If not used, label will default to "name" field
    },
    {
      "type": "button", // required field
      "name": "buttonDisplay", // required field. This is used as an ID. Having duplicate IDs may cause issues
      "text": "Button Display" // optional field. This is the text shown on the setting label. If not used, label will default to "name" field
    },
    {
      "type": "data", // required field. This setting type will not show up in the settings menu at any time, it is purely for storing data to make use of the API's saving systems
      "name": "dataStore", // required field. This is used as an ID. Having duplicate IDs may cause issues
      "access": "both", // optional field. This can be set to "both", "mainmenu", "world" or "globalworld". See bottom of JSON for full explanation
      "default": { // optional field. If not specified will default to an empty collection. Can contain as many items as you want under any names with any text values.
        "anItem": "Anything you want"
      }
    }
  ]
}
// If "access" is set to "both" then the value is saved globally and is visible at all times
// If "access" is set to "mainmenu" then the value is saved globally and is only visible when not in world
// If "access" is set to "world" then the value is saved to specific world's data and is only only visible when in a world
// If "access" is set to "globalworld" then the value is saved globally and is only visible when in a world